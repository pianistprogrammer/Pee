{"remainingRequest":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Navigation/NavbarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Navigation/NavbarItem.vue","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport classNames from 'classnames';\nimport waves from '../../mixins/waves';\n\nconst NavbarItem = {\n  props: {\n    tag: {\n      type: String,\n      default: 'li'\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean\n    },\n    exact: {\n      type: Boolean,\n      default: false\n    },\n    href: {\n      type: String,\n    },\n    newTab: {\n      type: Boolean,\n      default: false\n    },\n    to: [String, Object],\n    waves: {\n      type: Boolean,\n      default: true\n    },\n    wavesFixed: {\n      type: Boolean,\n      default: false\n    },\n    anchorClass: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      isNavFixed: false\n    };\n  },\n  computed: {\n    className() {\n      return classNames(\n        'nav-item',\n        this.waves && 'ripple-parent'\n      );\n    },\n    anchorClassName() {\n      return classNames({\n        'nav-link': true,\n        'navbar-link': true,\n        'disabled': this.disabled,\n        'active': this.active,\n      },\n      this.anchorClass\n      );\n    },\n    tab() {\n      if (this.newTab) {\n        return \"_blank\";\n      } return false;\n    }\n  },\n  methods: {\n    handleClick(e) {\n      this.$emit('click', e);\n      this.wave(e);\n    }\n  },\n  mounted() {\n    let el = this.$refs.navItem;\n    while (el.parentNode) {\n      if (el.className.includes('fixed')) {\n        this.isNavFixed = true;\n        break;\n      }\n      el = el.parentNode;\n    };\n  },\n  mixins: [waves]\n};\n\nexport default NavbarItem;\nexport { NavbarItem as mdbNavItem };\n",{"version":3,"sources":["NavbarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NavbarItem.vue","sourceRoot":"node_modules/mdbvue/src/components/Navigation","sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"className\" @click=\"(e) => handleClick(e)\" ref=\"navItem\">\n    <router-link tag=\"a\" v-if=\"to\" :exact=\"exact\" active-class='active' exact-active-class='active' :class='anchorClassName' :to=\"to\" :target=\"tab\">\n      <slot></slot>\n    </router-link>\n    <a v-else :href=\"href\" :class=\"anchorClassName\" :target=\"tab\">\n      <slot></slot>\n    </a>\n  </component>\n\n</template>\n\n<script>\nimport classNames from 'classnames';\nimport waves from '../../mixins/waves';\n\nconst NavbarItem = {\n  props: {\n    tag: {\n      type: String,\n      default: 'li'\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean\n    },\n    exact: {\n      type: Boolean,\n      default: false\n    },\n    href: {\n      type: String,\n    },\n    newTab: {\n      type: Boolean,\n      default: false\n    },\n    to: [String, Object],\n    waves: {\n      type: Boolean,\n      default: true\n    },\n    wavesFixed: {\n      type: Boolean,\n      default: false\n    },\n    anchorClass: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      isNavFixed: false\n    };\n  },\n  computed: {\n    className() {\n      return classNames(\n        'nav-item',\n        this.waves && 'ripple-parent'\n      );\n    },\n    anchorClassName() {\n      return classNames({\n        'nav-link': true,\n        'navbar-link': true,\n        'disabled': this.disabled,\n        'active': this.active,\n      },\n      this.anchorClass\n      );\n    },\n    tab() {\n      if (this.newTab) {\n        return \"_blank\";\n      } return false;\n    }\n  },\n  methods: {\n    handleClick(e) {\n      this.$emit('click', e);\n      this.wave(e);\n    }\n  },\n  mounted() {\n    let el = this.$refs.navItem;\n    while (el.parentNode) {\n      if (el.className.includes('fixed')) {\n        this.isNavFixed = true;\n        break;\n      }\n      el = el.parentNode;\n    };\n  },\n  mixins: [waves]\n};\n\nexport default NavbarItem;\nexport { NavbarItem as mdbNavItem };\n</script>\n\n<style scoped>\n\n</style>\n"]}]}