{"remainingRequest":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Advanced/ToastNotification.vue?vue&type=style&index=0&id=437f001a&scoped=true&lang=css&","dependencies":[{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Advanced/ToastNotification.vue","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.toast {\n  opacity: 1;\n}\n.text-muted {\n  padding-left: 10px;\n}\n",{"version":3,"sources":["ToastNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA","file":"ToastNotification.vue","sourceRoot":"node_modules/mdbvue/src/components/Advanced","sourcesContent":["<template>\n  <transition enter-active-class=\"animated fadeIn\" leave-active-class=\"animated \">\n    <div v-if=\"showing\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"toast-header\">\n        <mdb-icon class=\"mr-2\" :icon=\"icon\" :color=\"iconColor\" :size=\"iconSize\"></mdb-icon>\n        <strong class=\"mr-auto\">{{title}}</strong>\n        <small v-if=\"time\" class=\"text-muted\">{{calculatedTime}}</small>\n        <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" @click=\"closeToast\"><mdb-icon size=\"xs\" icon=\"times\"/></button>\n      </div>\n      <div class=\"toast-body\">\n        {{message}}\n      </div>\n    </div>\n  </transition>\n</template>\n\n\n<script>\nimport { mdbBtn, mdbIcon } from 'mdbvue';\nconst ToastNotification = {\n  name: 'Notification',\n  components: {\n    mdbBtn,\n    mdbIcon\n  },\n  props: {\n    time: {\n      type: Boolean,\n      default: true\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    message: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: \"square\"\n    },\n    iconSize: {\n      type: String,\n      default: 'lg'\n    },\n    iconColor: {\n      type: String,\n      default: 'primary'\n    },\n    received: Date\n  },\n  data(){\n    return {\n      currentTime: '',\n      startTime: '',\n      showNotification: this.show\n    };\n  },\n  computed: {\n    showing: {\n      get() {\n        return this.showNotification;\n      },\n      set(newVal) {\n        this.showNotification = newVal;\n      }\n    },\n    calculatedTime(){\n      let time = (this.currentTime - this.startTime)/1000;\n      return this.formatTime(time);\n    }\n  },\n  methods: {\n    updateTime(){\n      this.currentTime = new Date().getTime();\n    },\n    formatTime(time){\n      switch (true) {\n        case (time === 0):\n          return `now`;\n        case (time < 60):\n          let second = Math.floor(time);\n          return `${second} seconds ago`;\n        case (time < 120):\n          return `1 minute ago`;\n        case (time < 3600):\n          let minutes = Math.floor(time/60);\n          return `${minutes} minutes ago`;\n        case (time === 3600):\n          return `1 hour ago`;\n        case (time > 3600 && time < 86400):\n          let hours = Math.floor(time/3600);\n          return `${hours} hours ago`;\n        case (time === 86400):\n          return `a day ago`;\n        case (time > 86400):\n          let days = Math.floor(time/86400);\n          return `${days} days ago`;\n      }\n    },\n    closeToast(){\n      this.showing = false;\n    },\n  },\n  mounted(){\n    let timeReceived = this.received || new Date();\n    this.startTime = timeReceived.getTime();\n    this.currentTime = new Date().getTime();\n    window.setInterval(this.updateTime, 60000);\n  },\n  beforeDestroy(){\n    window.clearInterval(this.updateTime);\n  }\n};\n\nexport default ToastNotification;\nexport { ToastNotification as mdbToastNotification };\n</script>\n<style scoped>\n  .toast {\n    opacity: 1;\n  }\n  .text-muted {\n    padding-left: 10px;\n  }\n</style>\n"]}]}