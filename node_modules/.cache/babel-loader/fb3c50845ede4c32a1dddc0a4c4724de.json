{"remainingRequest":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/thread-loader/dist/cjs.js!/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js!/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Layout/Masonry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Layout/Masonry.vue","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/pianistprogrammer/Desktop/peexoo/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nvar Masonry = {\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    horizontal: {\n      type: Boolean,\n      default: false\n    },\n    flexbox: {\n      type: Boolean,\n      default: false\n    },\n    maxHeight: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    numCols: {\n      type: Number\n    }\n  },\n  computed: {\n    masonryClass: function masonryClass() {\n      return [this.horizontal || this.flexbox ? this.flexbox ? 'masonry-with-flex' : 'masonry-horizontal' : 'masonry-with-columns'];\n    },\n    masonryStyle: function masonryStyle() {\n      return {\n        maxHeight: isNaN(this.maxHeight) ? this.maxHeight : \"\".concat(this.maxHeight, \"px\")\n      };\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (!this.horizontal && !this.flexbox) {\n      var colHeights = Array(this.numCols).fill(0);\n      var masonryWrapper = this.$refs.masonry;\n      Array.from(masonryWrapper.children).forEach(function (child, i) {\n        var order = i % _this.numCols;\n        child.style.order = order;\n        colHeights[order] += parseFloat(child.clientHeight);\n      });\n      masonryWrapper.style.height = Math.max.apply(Math, _toConsumableArray(colHeights)) + 'px';\n    }\n  }\n};\nexport default Masonry;\nexport { Masonry as mdbMasonry };",{"version":3,"sources":["Masonry.vue"],"names":[],"mappings":";;;;;;;;;;;;AAOA,IAAA,OAAA,GAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAjBA,GADA;AAsBA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,CACA,KAAA,UAAA,IAAA,KAAA,OAAA,GAAA,KAAA,OAAA,GAAA,mBAAA,GAAA,oBAAA,GAAA,sBADA,CAAA;AAGA,KALA;AAMA,IAAA,YANA,0BAMA;AACA,aAAA;AACA,QAAA,SAAA,EAAA,KAAA,CAAA,KAAA,SAAA,CAAA,GAAA,KAAA,SAAA,aAAA,KAAA,SAAA;AADA,OAAA;AAGA;AAVA,GAtBA;AAkCA,EAAA,OAlCA,qBAkCA;AAAA;;AACA,QAAA,CAAA,KAAA,UAAA,IAAA,CAAA,KAAA,OAAA,EAAA;AACA,UAAA,UAAA,GAAA,KAAA,CAAA,KAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,UAAA,cAAA,GAAA,KAAA,KAAA,CAAA,OAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,cAAA,CAAA,QAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,CAAA,GAAA,KAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,IAAA,UAAA,CAAA,KAAA,CAAA,YAAA,CAAA;AACA,OAJA;AAKA,MAAA,cAAA,CAAA,KAAA,CAAA,MAAA,GAAA,IAAA,CAAA,GAAA,OAAA,IAAA,qBAAA,UAAA,EAAA,GAAA,IAAA;AACA;AACA;AA7CA,CAAA;AAgDA,eAAA,OAAA;AACA,SAAA,OAAA,IAAA,UAAA","sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"masonryClass\" :style=\"masonryStyle\" ref=\"masonry\">\n    <slot></slot>\n  </component>\n</template>\n\n<script>\nconst Masonry = {\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    horizontal: {\n      type: Boolean,\n      default: false\n    },\n    flexbox: {\n      type: Boolean,\n      default: false\n    },\n    maxHeight: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    numCols: {\n      type: Number\n    }\n  },\n  computed: {\n    masonryClass() {\n      return [\n        this.horizontal || this.flexbox ? this.flexbox ? 'masonry-with-flex' : 'masonry-horizontal' : 'masonry-with-columns'\n      ];\n    },\n    masonryStyle() {     \n      return {\n        maxHeight: isNaN(this.maxHeight) ? this.maxHeight : `${this.maxHeight}px`\n      };\n    }\n  },\n  mounted() {\n    if (!this.horizontal && !this.flexbox) {\n      const colHeights = Array(this.numCols).fill(0);\n      const masonryWrapper = this.$refs.masonry;\n      Array.from(masonryWrapper.children).forEach((child, i) => {\n        const order = i % this.numCols;\n        child.style.order = order;\n        colHeights[order] += parseFloat(child.clientHeight);\n      });\n      masonryWrapper.style.height = Math.max(...colHeights) + 'px';\n    }\n  }\n};\n\nexport default Masonry;\nexport { Masonry as mdbMasonry };\n</script>\n\n<style scoped>\n.masonry-with-columns, .masonry-with-flex {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap; }\n.masonry-horizontal {\n  display: flex;\n  flex-wrap: wrap; }\n.masonry-horizontal div {\n  flex: 1 0 auto; }\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Layout"}]}