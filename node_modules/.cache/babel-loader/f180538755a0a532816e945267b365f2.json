{"remainingRequest":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/thread-loader/dist/cjs.js!/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js!/Users/pianistprogrammer/Desktop/peexoo/node_modules/eslint-loader/index.js??ref--13-0!/Users/pianistprogrammer/Desktop/peexoo/src/assets/js/shuffle-letters.js","dependencies":[{"path":"/Users/pianistprogrammer/Desktop/peexoo/src/assets/js/shuffle-letters.js","mtime":1558417992864},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n\n/**\n * @name\t\tShuffle Letters\n * @author\t\tMartin Angelov\n * @version \t1.0\n * @url\t\t\thttp://tutorialzine.com/2011/09/shuffle-letters-effect-jquery/\n * @license\t\tMIT License\n */\n(function ($) {\n  $.fn.shuffleLetters = function (prop) {\n    var options = $.extend({\n      \"step\": 8,\n      // How many times should the letters be changed\n      \"fps\": 25,\n      // Frames Per Second\n      \"text\": \"\",\n      // Use this text instead of the contents\n      \"callback\": function callback() {} // Run once the animation is complete\n\n    }, prop);\n    return this.each(function () {\n      var el = $(this),\n          str = \"\"; // Preventing parallel animations using a flag;\n\n      if (el.data('animated')) {\n        return true;\n      }\n\n      el.data('animated', true);\n\n      if (options.text) {\n        str = options.text.split('');\n      } else {\n        str = el.text().split('');\n      } // The types array holds the type for each character;\n      // Letters holds the positions of non-space characters;\n\n\n      var types = [],\n          letters = []; // Looping through all the chars of the string\n\n      for (var i = 0; i < str.length; i++) {\n        var ch = str[i];\n\n        if (ch == \" \") {\n          types[i] = \"space\";\n          continue;\n        } else if (/[a-z]/.test(ch)) {\n          types[i] = \"lowerLetter\";\n        } else if (/[A-Z]/.test(ch)) {\n          types[i] = \"upperLetter\";\n        } else {\n          types[i] = \"symbol\";\n        }\n\n        letters.push(i);\n      }\n\n      el.html(\"\"); // Self executing named function expression:\n\n      (function shuffle(start) {\n        // This code is run options.fps times per second\n        // and updates the contents of the page element\n        var i,\n            len = letters.length,\n            strCopy = str.slice(0); // Fresh copy of the string\n\n        if (start > len) {\n          // The animation is complete. Updating the\n          // flag and triggering the callback;\n          el.data('animated', false);\n          options.callback(el);\n          return;\n        } // All the work gets done here\n\n\n        for (i = Math.max(start, 0); i < len; i++) {\n          // The start argument and options.step limit\n          // the characters we will be working on at once\n          if (i < start + options.step) {\n            // Generate a random character at thsi position\n            strCopy[letters[i]] = randomChar(types[letters[i]]);\n          } else {\n            strCopy[letters[i]] = \"\";\n          }\n        }\n\n        el.text(strCopy.join(\"\"));\n        setTimeout(function () {\n          shuffle(start + 1);\n        }, 1000 / options.fps);\n      })(-options.step);\n    });\n  };\n\n  function randomChar(type) {\n    var pool = \"\";\n\n    if (type == \"lowerLetter\") {\n      pool = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    } else if (type == \"upperLetter\") {\n      pool = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    } else if (type == \"symbol\") {\n      pool = \",.?/\\\\(^)![]{}*&^%$#'\\\"\";\n    }\n\n    var arr = pool.split('');\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n})(jQuery);",{"version":3,"sources":["/Users/pianistprogrammer/Desktop/peexoo/src/assets/js/shuffle-letters.js"],"names":["$","fn","shuffleLetters","prop","options","extend","each","el","str","data","text","split","types","letters","i","length","ch","test","push","html","shuffle","start","len","strCopy","slice","callback","Math","max","step","randomChar","join","setTimeout","fps","type","pool","arr","floor","random","jQuery"],"mappings":"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","sourcesContent":["/**\n * @name\t\tShuffle Letters\n * @author\t\tMartin Angelov\n * @version \t1.0\n * @url\t\t\thttp://tutorialzine.com/2011/09/shuffle-letters-effect-jquery/\n * @license\t\tMIT License\n */\n\n(function($){\n\t\n\t$.fn.shuffleLetters = function(prop){\n\t\t\n\t\tvar options = $.extend({\n\t\t\t\"step\"\t\t: 8,\t\t\t// How many times should the letters be changed\n\t\t\t\"fps\"\t\t: 25,\t\t\t// Frames Per Second\n\t\t\t\"text\"\t\t: \"\", \t\t\t// Use this text instead of the contents\n\t\t\t\"callback\"\t: function(){}\t// Run once the animation is complete\n\t\t},prop)\n\t\t\n\t\treturn this.each(function(){\n\t\t\t\n\t\t\tvar el = $(this),\n\t\t\t\tstr = \"\";\n\n\n\t\t\t// Preventing parallel animations using a flag;\n\n\t\t\tif(el.data('animated')){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\tel.data('animated',true);\n\t\t\t\n\t\t\t\n\t\t\tif(options.text) {\n\t\t\t\tstr = options.text.split('');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr = el.text().split('');\n\t\t\t}\n\t\t\t\n\t\t\t// The types array holds the type for each character;\n\t\t\t// Letters holds the positions of non-space characters;\n\t\t\t\n\t\t\tvar types = [],\n\t\t\t\tletters = [];\n\n\t\t\t// Looping through all the chars of the string\n\t\t\t\n\t\t\tfor(var i=0;i<str.length;i++){\n\t\t\t\t\n\t\t\t\tvar ch = str[i];\n\t\t\t\t\n\t\t\t\tif(ch == \" \"){\n\t\t\t\t\ttypes[i] = \"space\";\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse if(/[a-z]/.test(ch)){\n\t\t\t\t\ttypes[i] = \"lowerLetter\";\n\t\t\t\t}\n\t\t\t\telse if(/[A-Z]/.test(ch)){\n\t\t\t\t\ttypes[i] = \"upperLetter\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttypes[i] = \"symbol\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tletters.push(i);\n\t\t\t}\n\t\t\t\n\t\t\tel.html(\"\");\t\t\t\n\n\t\t\t// Self executing named function expression:\n\t\t\t\n\t\t\t(function shuffle(start){\n\t\t\t\n\t\t\t\t// This code is run options.fps times per second\n\t\t\t\t// and updates the contents of the page element\n\t\t\t\t\t\n\t\t\t\tvar i,\n\t\t\t\t\tlen = letters.length, \n\t\t\t\t\tstrCopy = str.slice(0);\t// Fresh copy of the string\n\t\t\t\t\t\n\t\t\t\tif(start>len){\n\t\t\t\t\t\n\t\t\t\t\t// The animation is complete. Updating the\n\t\t\t\t\t// flag and triggering the callback;\n\t\t\t\t\t\n\t\t\t\t\tel.data('animated',false);\n\t\t\t\t\toptions.callback(el);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// All the work gets done here\n\t\t\t\tfor(i=Math.max(start,0); i < len; i++){\n\n\t\t\t\t\t// The start argument and options.step limit\n\t\t\t\t\t// the characters we will be working on at once\n\t\t\t\t\t\n\t\t\t\t\tif( i < start+options.step){\n\t\t\t\t\t\t// Generate a random character at thsi position\n\t\t\t\t\t\tstrCopy[letters[i]] = randomChar(types[letters[i]]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstrCopy[letters[i]] = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tel.text(strCopy.join(\"\"));\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\n\t\t\t\t\tshuffle(start+1);\n\t\t\t\t\t\n\t\t\t\t},1000/options.fps);\n\t\t\t\t\n\t\t\t})(-options.step);\n\t\t\t\n\n\t\t});\n\t};\n\t\n\tfunction randomChar(type){\n\t\tvar pool = \"\";\n\t\t\n\t\tif (type == \"lowerLetter\"){\n\t\t\tpool = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\t\t}\n\t\telse if (type == \"upperLetter\"){\n\t\t\tpool = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\t\t}\n\t\telse if (type == \"symbol\"){\n\t\t\tpool = \",.?/\\\\(^)![]{}*&^%$#'\\\"\";\n\t\t}\n\t\t\n\t\tvar arr = pool.split('');\n\t\treturn arr[Math.floor(Math.random()*arr.length)];\n\t}\n\t\n})(jQuery);"]}]}