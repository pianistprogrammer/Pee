{"remainingRequest":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js!/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Advanced/Tooltip.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/mdbvue/src/components/Advanced/Tooltip.vue","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pianistprogrammer/Desktop/peexoo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popper from 'popper.js';\n\nvar on = function on(element, event, handler) {\n  if (element && event && handler) {\n    document.addEventListener ? element.addEventListener(event, handler, false) : element.attachEvent('on' + event, handler);\n  }\n};\n\nvar off = function off(element, event, handler) {\n  if (element && event) {\n    document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\n  }\n};\n\nvar Tooltip = {\n  props: {\n    trigger: {\n      type: String,\n      default: 'hover',\n      validator: function validator(value) {\n        return ['click', 'hover'].indexOf(value) > -1;\n      }\n    },\n    delayOnMouseOut: {\n      type: Number,\n      default: 10\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    content: String,\n    enterActiveClass: String,\n    leaveActiveClass: String,\n    boundariesSelector: String,\n    reference: {},\n    forceShow: {\n      type: Boolean,\n      default: false\n    },\n    appendToBody: {\n      type: Boolean,\n      default: false\n    },\n    visibleArrow: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      referenceElm: null,\n      popperJS: null,\n      showPopper: false,\n      currentPlacement: '',\n      popperOptions: {\n        placement: 'bottom',\n        gpuAcceleration: false\n      }\n    };\n  },\n  watch: {\n    showPopper: function showPopper(value) {\n      if (value) {\n        this.$emit('show');\n        this.updatePopper();\n      } else {\n        this.$emit('hide');\n      }\n    },\n    forceShow: {\n      handler: function handler(value) {\n        this[value ? 'doShow' : 'doClose']();\n      },\n      immediate: true\n    }\n  },\n  created: function created() {\n    this.appendedArrow = false;\n    this.appendedToBody = false;\n    this.popperOptions = Object.assign(this.popperOptions, this.options);\n  },\n  mounted: function mounted() {\n    this.referenceElm = this.reference || this.$slots.reference[0].elm;\n    this.tooltip = this.$refs.tooltip || this.$slots.default[0].elm;\n\n    switch (this.trigger) {\n      case 'click':\n        on(this.referenceElm, 'click', this.doToggle);\n        on(document, 'click', this.handleDocumentClick);\n        break;\n\n      case 'hover':\n        on(this.referenceElm, 'mouseover', this.onMouseOver);\n        on(this.tooltip, 'mouseover', this.onMouseOver);\n        on(this.referenceElm, 'mouseout', this.onMouseOut);\n        on(this.tooltip, 'mouseout', this.onMouseOut);\n        break;\n    }\n  },\n  methods: {\n    doToggle: function doToggle() {\n      if (!this.forceShow) {\n        this.showPopper = !this.showPopper;\n      }\n    },\n    doShow: function doShow() {\n      this.showPopper = true;\n    },\n    doClose: function doClose() {\n      this.showPopper = false;\n    },\n    doDestroy: function doDestroy() {\n      if (this.showPopper) {\n        return;\n      }\n\n      if (this.popperJS) {\n        this.popperJS.destroy();\n        this.popperJS = null;\n      }\n\n      if (this.appendedToBody) {\n        this.appendedToBody = false;\n        document.body.removeChild(this.tooltip.parentElement);\n      }\n    },\n    createPopper: function createPopper() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        if (_this.visibleArrow) {\n          _this.appendArrow(_this.tooltip);\n        }\n\n        if (_this.appendToBody && !_this.appendedToBody) {\n          _this.appendedToBody = true;\n          document.body.appendChild(_this.tooltip.parentElement);\n        }\n\n        if (_this.popperJS && _this.popperJS.destroy) {\n          _this.popperJS.destroy();\n        }\n\n        if (_this.boundariesSelector) {\n          var boundariesElement = document.querySelector(_this.boundariesSelector);\n\n          if (boundariesElement) {\n            _this.popperOptions.modifiers = Object.assign({}, _this.popperOptions.modifiers);\n            _this.popperOptions.modifiers.preventOverflow = Object.assign({}, _this.popperOptions.modifiers.preventOverflow);\n            _this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\n          }\n        }\n\n        _this.popperOptions.onCreate = function () {\n          _this.$emit('created', _this);\n\n          _this.$nextTick(_this.updatePopper);\n        };\n\n        _this.popperJS = new Popper(_this.referenceElm, _this.tooltip, _this.popperOptions);\n      });\n    },\n    destroyPopper: function destroyPopper() {\n      off(this.referenceElm, 'click', this.doToggle);\n      off(this.referenceElm, 'mouseup', this.doClose);\n      off(this.referenceElm, 'mousedown', this.doShow);\n      off(this.referenceElm, 'focus', this.doShow);\n      off(this.referenceElm, 'blur', this.doClose);\n      off(this.referenceElm, 'mouseout', this.onMouseOut);\n      off(this.referenceElm, 'mouseover', this.onMouseOver);\n      off(document, 'click', this.handleDocumentClick);\n      this.showPopper = false;\n      this.doDestroy();\n    },\n    appendArrow: function appendArrow(element) {\n      if (this.appendedArrow) {\n        return;\n      }\n\n      this.appendedArrow = true;\n      var arrow = document.createElement('div');\n      arrow.setAttribute('x-arrow', '');\n      arrow.className = 'tooltip_arrow';\n      element.appendChild(arrow);\n    },\n    updatePopper: function updatePopper() {\n      this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\n    },\n    onMouseOver: function onMouseOver() {\n      this.showPopper = true;\n      clearTimeout(this._timer);\n    },\n    onMouseOut: function onMouseOut() {\n      var _this2 = this;\n\n      this._timer = setTimeout(function () {\n        _this2.showPopper = false;\n      }, this.delayOnMouseOut);\n    },\n    handleDocumentClick: function handleDocumentClick(e) {\n      if (!this.$el || !this.referenceElm || this.$el.contains(e.target) || this.referenceElm.contains(e.target) || !this.tooltip || this.tooltip.contains(e.target)) {\n        return;\n      }\n\n      this.$emit('documentClick');\n\n      if (this.forceShow) {\n        return;\n      }\n\n      this.showPopper = false;\n    }\n  },\n  destroyed: function destroyed() {\n    this.destroyPopper();\n  }\n};\nexport default Tooltip;\nexport { Tooltip as mdbTooltip };",{"version":3,"sources":["Tooltip.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <span>\n    <transition @after-leave=\"doDestroy\">\n      <span ref=\"popper\" :class=\"{show:!disabled && showPopper}\">\n        <div class=\"tooltip\" v-if=\"$slots.tip\" ref=\"tooltip\">\n          <slot name=\"tip\"></slot>\n        </div>\n        <slot></slot>\n      </span>\n    </transition>\n    <slot name=\"reference\"></slot>\n  </span>\n</template>\n\n<script>\n  import Popper from 'popper.js';\n\n  const on = function(element, event, handler) {\n    if (element && event && handler) {\n      document.addEventListener ? element.addEventListener(event, handler, false) : element.attachEvent('on' + event, handler);\n    }\n  };\n\n  const off = function(element, event, handler) {\n    if (element && event) {\n      document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\n    }\n  };\n\n  const Tooltip = {\n    props: {\n      trigger: {\n        type: String,\n        default: 'hover',\n        validator: value => ['click', 'hover'].indexOf(value) > -1\n      },\n      delayOnMouseOut: {\n        type: Number,\n        default: 10,\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      content: String,\n      enterActiveClass: String,\n      leaveActiveClass: String,\n      boundariesSelector: String,\n      reference: {},\n      forceShow: {\n        type: Boolean,\n        default: false\n      },\n      appendToBody: {\n        type: Boolean,\n        default: false\n      },\n      visibleArrow: {\n        type: Boolean,\n        default: true\n      },\n      transition: {\n        type: String,\n        default: ''\n      },\n      options: {\n        type: Object,\n        default() {\n          return {};\n        }\n      },\n    },\n\n    data() {\n      return {\n        referenceElm: null,\n        popperJS: null,\n        showPopper: false,\n        currentPlacement: '',\n        popperOptions: {\n          placement: 'bottom',\n          gpuAcceleration: false\n        }\n      };\n    },\n\n    watch: {\n      showPopper(value) {\n        if (value) {\n          this.$emit('show');\n          this.updatePopper();\n        } else {\n          this.$emit('hide');\n        }\n      },\n\n      forceShow: {\n        handler(value) {\n          this[value ? 'doShow' : 'doClose']();\n        },\n        immediate: true\n      }\n    },\n\n    created() {\n      this.appendedArrow = false;\n      this.appendedToBody = false;\n      this.popperOptions = Object.assign(this.popperOptions, this.options);\n    },\n\n    mounted() {\n      this.referenceElm = this.reference || this.$slots.reference[0].elm;\n      this.tooltip =  this.$refs.tooltip || this.$slots.default[0].elm;\n\n      switch (this.trigger) {\n        case 'click':\n          on(this.referenceElm, 'click', this.doToggle);\n          on(document, 'click', this.handleDocumentClick);\n          break;\n        case 'hover':\n          on(this.referenceElm, 'mouseover', this.onMouseOver);\n          on(this.tooltip, 'mouseover', this.onMouseOver);\n          on(this.referenceElm, 'mouseout', this.onMouseOut);\n          on(this.tooltip, 'mouseout', this.onMouseOut);\n          break;\n      }\n    },\n\n    methods: {\n      doToggle() {\n        if (!this.forceShow) {\n          this.showPopper = !this.showPopper;\n        }\n      },\n\n      doShow() {\n        this.showPopper = true;\n      },\n\n      doClose() {\n        this.showPopper = false;\n      },\n\n      doDestroy() {\n        if (this.showPopper) {\n          return;\n        }\n\n        if (this.popperJS) {\n          this.popperJS.destroy();\n          this.popperJS = null;\n        }\n\n        if (this.appendedToBody) {\n          this.appendedToBody = false;\n          document.body.removeChild(this.tooltip.parentElement);\n        }\n      },\n\n      createPopper() {\n        this.$nextTick(() => {\n          if (this.visibleArrow) {\n            this.appendArrow(this.tooltip);\n          }\n\n          if (this.appendToBody && !this.appendedToBody) {\n            this.appendedToBody = true;\n            document.body.appendChild(this.tooltip.parentElement);\n          }\n\n          if (this.popperJS && this.popperJS.destroy) {\n            this.popperJS.destroy();\n          }\n\n          if (this.boundariesSelector) {\n            const boundariesElement = document.querySelector(this.boundariesSelector);\n\n            if (boundariesElement) {\n              this.popperOptions.modifiers = Object.assign({}, this.popperOptions.modifiers);\n              this.popperOptions.modifiers.preventOverflow = Object.assign({}, this.popperOptions.modifiers.preventOverflow);\n              this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\n            }\n          }\n\n          this.popperOptions.onCreate = () => {\n            this.$emit('created', this);\n            this.$nextTick(this.updatePopper);\n          };\n\n          this.popperJS = new Popper(this.referenceElm, this.tooltip, this.popperOptions);\n        });\n      },\n\n      destroyPopper() {\n        off(this.referenceElm, 'click', this.doToggle);\n        off(this.referenceElm, 'mouseup', this.doClose);\n        off(this.referenceElm, 'mousedown', this.doShow);\n        off(this.referenceElm, 'focus', this.doShow);\n        off(this.referenceElm, 'blur', this.doClose);\n        off(this.referenceElm, 'mouseout', this.onMouseOut);\n        off(this.referenceElm, 'mouseover', this.onMouseOver);\n        off(document, 'click', this.handleDocumentClick);\n\n        this.showPopper = false;\n        this.doDestroy();\n      },\n\n      appendArrow(element) {\n        if (this.appendedArrow) {\n          return;\n        }\n\n        this.appendedArrow = true;\n\n        const arrow = document.createElement('div');\n        arrow.setAttribute('x-arrow', '');\n        arrow.className = 'tooltip_arrow';\n        element.appendChild(arrow);\n      },\n\n      updatePopper() {\n        this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\n      },\n\n      onMouseOver() {\n        this.showPopper = true;\n        clearTimeout(this._timer);\n      },\n\n      onMouseOut() {\n        this._timer = setTimeout(() => {\n          this.showPopper = false;\n        }, this.delayOnMouseOut);\n      },\n\n      handleDocumentClick(e) {\n        if (!this.$el || !this.referenceElm ||\n          this.$el.contains(e.target) ||\n          this.referenceElm.contains(e.target) ||\n          !this.tooltip || this.tooltip.contains(e.target)\n        ) {\n          return;\n        }\n\n        this.$emit('documentClick');\n\n        if (this.forceShow) {\n          return;\n        }\n\n        this.showPopper = false;\n      }\n    },\n\n    destroyed() {\n      this.destroyPopper();\n    }\n  };\n\n  export default Tooltip;\n  export { Tooltip as mdbTooltip };\n</script>\n\n<style>\n  .tooltip {\n    width: auto;\n    background-color: rgba(0, 0, 0, 0.85);\n    color: rgba(242, 239, 239, 0.95);\n    text-align: center;\n    padding: 0.24em 0.5em;\n    display: inline-block;\n    border-radius: 3px;\n    position: absolute;\n    font-size: 0.83em;\n    font-weight: normal;\n    z-index: 200000;\n    opacity: 0;\n    transition: opacity 0.2s, visibility 0.2s;\n    visibility: hidden;\n  }\n\n  .show > .tooltip {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  .tooltip .tooltip_arrow {\n    width: 0;\n    height: 0;\n    border-style: solid;\n    position: absolute;\n    margin: 5px;\n  }\n  .tooltip[x-placement^=\"top\"] {\n    margin-bottom: 5px;\n  }\n  .tooltip[x-placement^=\"top\"] .tooltip_arrow {\n    border-width: 5px 5px 0 5px;\n    border-color:  rgba(0, 0, 0, 0.85) transparent transparent transparent;\n    bottom: -5px;\n    left: calc(50% - 5px);\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .tooltip[x-placement^=\"bottom\"] {\n    margin-top: 5px;\n  }\n  .tooltip[x-placement^=\"bottom\"] .tooltip_arrow {\n    border-width: 0 5px 5px 5px;\n    border-color: transparent transparent rgba(0, 0, 0, 0.85) transparent;\n    top: -5px;\n    left: calc(50% - 5px);\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .tooltip[x-placement^=\"right\"] {\n    margin-left: 5px;\n  }\n  .tooltip[x-placement^=\"right\"] .tooltip_arrow {\n    border-width: 5px 5px 5px 0;\n    border-color: transparent rgba(0, 0, 0, 0.85) transparent transparent;\n    left: -5px;\n    top: calc(50% - 5px);\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .tooltip[x-placement^=\"left\"] {\n    margin-right: 5px;\n  }\n  .tooltip[x-placement^=\"left\"] .tooltip_arrow {\n    border-width: 5px 0 5px 5px;\n    border-color: transparent transparent transparent rgba(0, 0, 0, 0.85);\n    right: -5px;\n    top: calc(50% - 5px);\n    margin-left: 0;\n    margin-right: 0;\n  }\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Advanced"}]}